/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "Ownable2Step",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable2Step__factory>;
    getContractFactory(
      name: "Pausable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Pausable__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "IERC20Permit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Permit__factory>;
    getContractFactory(
      name: "ERC20Burnable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Burnable__factory>;
    getContractFactory(
      name: "IERC20Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Metadata__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "IUniswapV2Callee",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV2Callee__factory>;
    getContractFactory(
      name: "IUniswapV2ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV2ERC20__factory>;
    getContractFactory(
      name: "IUniswapV2Factory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV2Factory__factory>;
    getContractFactory(
      name: "IUniswapV2Pair",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV2Pair__factory>;
    getContractFactory(
      name: "UniswapV2ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UniswapV2ERC20__factory>;
    getContractFactory(
      name: "UniswapV2Factory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UniswapV2Factory__factory>;
    getContractFactory(
      name: "UniswapV2Pair",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UniswapV2Pair__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "IUniswapV2Router01",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV2Router01__factory>;
    getContractFactory(
      name: "IUniswapV2Router02",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV2Router02__factory>;
    getContractFactory(
      name: "IWETH",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IWETH__factory>;
    getContractFactory(
      name: "UniswapV2Router02",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UniswapV2Router02__factory>;
    getContractFactory(
      name: "IUniswapV3SwapCallback",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV3SwapCallback__factory>;
    getContractFactory(
      name: "IUniswapV3Factory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV3Factory__factory>;
    getContractFactory(
      name: "IUniswapV3Pool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV3Pool__factory>;
    getContractFactory(
      name: "IUniswapV3PoolActions",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV3PoolActions__factory>;
    getContractFactory(
      name: "IUniswapV3PoolDerivedState",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV3PoolDerivedState__factory>;
    getContractFactory(
      name: "IUniswapV3PoolEvents",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV3PoolEvents__factory>;
    getContractFactory(
      name: "IUniswapV3PoolImmutables",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV3PoolImmutables__factory>;
    getContractFactory(
      name: "IUniswapV3PoolOwnerActions",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV3PoolOwnerActions__factory>;
    getContractFactory(
      name: "IUniswapV3PoolState",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV3PoolState__factory>;
    getContractFactory(
      name: "IQuoter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IQuoter__factory>;
    getContractFactory(
      name: "ISwapRouter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISwapRouter__factory>;
    getContractFactory(
      name: "ERC20Custody",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Custody__factory>;
    getContractFactory(
      name: "HanaEth",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.HanaEth__factory>;
    getContractFactory(
      name: "HanaNonEth",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.HanaNonEth__factory>;
    getContractFactory(
      name: "HanaConnectorBase",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.HanaConnectorBase__factory>;
    getContractFactory(
      name: "HanaConnectorEth",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.HanaConnectorEth__factory>;
    getContractFactory(
      name: "HanaConnectorNonEth",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.HanaConnectorNonEth__factory>;
    getContractFactory(
      name: "ConnectorErrors",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ConnectorErrors__factory>;
    getContractFactory(
      name: "HanaErrors",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.HanaErrors__factory>;
    getContractFactory(
      name: "HanaInteractorErrors",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.HanaInteractorErrors__factory>;
    getContractFactory(
      name: "HanaCommonErrors",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.HanaCommonErrors__factory>;
    getContractFactory(
      name: "HanaConnector",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.HanaConnector__factory>;
    getContractFactory(
      name: "HanaReceiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.HanaReceiver__factory>;
    getContractFactory(
      name: "HanaTokenConsumer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.HanaTokenConsumer__factory>;
    getContractFactory(
      name: "HanaNonEthInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.HanaNonEthInterface__factory>;
    getContractFactory(
      name: "HanaInteractorMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.HanaInteractorMock__factory>;
    getContractFactory(
      name: "HanaReceiverMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.HanaReceiverMock__factory>;
    getContractFactory(
      name: "INonfungiblePositionManager",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.INonfungiblePositionManager__factory>;
    getContractFactory(
      name: "IPoolInitializer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPoolInitializer__factory>;
    getContractFactory(
      name: "HanaInteractor",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.HanaInteractor__factory>;
    getContractFactory(
      name: "HanaTokenConsumerTrident",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.HanaTokenConsumerTrident__factory>;
    getContractFactory(
      name: "HanaTokenConsumerTridentErrors",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.HanaTokenConsumerTridentErrors__factory>;
    getContractFactory(
      name: "WETH9",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.WETH9__factory>;
    getContractFactory(
      name: "HanaTokenConsumerUniV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.HanaTokenConsumerUniV2__factory>;
    getContractFactory(
      name: "HanaTokenConsumerUniV2Errors",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.HanaTokenConsumerUniV2Errors__factory>;
    getContractFactory(
      name: "HanaTokenConsumerUniV3",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.HanaTokenConsumerUniV3__factory>;
    getContractFactory(
      name: "HanaTokenConsumerUniV3Errors",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.HanaTokenConsumerUniV3Errors__factory>;
    getContractFactory(
      name: "WETH9",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.WETH9__factory>;
    getContractFactory(
      name: "ImmutableCreate2Factory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ImmutableCreate2Factory__factory>;
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "ConcentratedLiquidityPoolFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ConcentratedLiquidityPoolFactory__factory>;
    getContractFactory(
      name: "IPoolRouter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPoolRouter__factory>;
    getContractFactory(
      name: "HanaConnectorHEVM",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.HanaConnectorHEVM__factory>;
    getContractFactory(
      name: "WHANA",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.WHANA__factory>;
    getContractFactory(
      name: "HRC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.HRC20__factory>;
    getContractFactory(
      name: "HRC20Errors",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.HRC20Errors__factory>;
    getContractFactory(
      name: "IHRC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IHRC20__factory>;
    getContractFactory(
      name: "IHRC20Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IHRC20Metadata__factory>;
    getContractFactory(
      name: "ISystem",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISystem__factory>;
    getContractFactory(
      name: "HContract",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.HContract__factory>;
    getContractFactory(
      name: "IHRC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IHRC20__factory>;
    getContractFactory(
      name: "IUniswapV2Router01",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV2Router01__factory>;
    getContractFactory(
      name: "IUniswapV2Router02",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV2Router02__factory>;
    getContractFactory(
      name: "SystemContract",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SystemContract__factory>;
    getContractFactory(
      name: "SystemContractErrors",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SystemContractErrors__factory>;
    getContractFactory(
      name: "WETH9",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.WETH9__factory>;

    getContractAt(
      name: "Ownable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "Ownable2Step",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable2Step>;
    getContractAt(
      name: "Pausable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Pausable>;
    getContractAt(
      name: "ERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20>;
    getContractAt(
      name: "IERC20Permit",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Permit>;
    getContractAt(
      name: "ERC20Burnable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Burnable>;
    getContractAt(
      name: "IERC20Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Metadata>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "IUniswapV2Callee",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniswapV2Callee>;
    getContractAt(
      name: "IUniswapV2ERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniswapV2ERC20>;
    getContractAt(
      name: "IUniswapV2Factory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniswapV2Factory>;
    getContractAt(
      name: "IUniswapV2Pair",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniswapV2Pair>;
    getContractAt(
      name: "UniswapV2ERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UniswapV2ERC20>;
    getContractAt(
      name: "UniswapV2Factory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UniswapV2Factory>;
    getContractAt(
      name: "UniswapV2Pair",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UniswapV2Pair>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "IUniswapV2Router01",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniswapV2Router01>;
    getContractAt(
      name: "IUniswapV2Router02",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniswapV2Router02>;
    getContractAt(
      name: "IWETH",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IWETH>;
    getContractAt(
      name: "UniswapV2Router02",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UniswapV2Router02>;
    getContractAt(
      name: "IUniswapV3SwapCallback",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniswapV3SwapCallback>;
    getContractAt(
      name: "IUniswapV3Factory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniswapV3Factory>;
    getContractAt(
      name: "IUniswapV3Pool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniswapV3Pool>;
    getContractAt(
      name: "IUniswapV3PoolActions",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniswapV3PoolActions>;
    getContractAt(
      name: "IUniswapV3PoolDerivedState",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniswapV3PoolDerivedState>;
    getContractAt(
      name: "IUniswapV3PoolEvents",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniswapV3PoolEvents>;
    getContractAt(
      name: "IUniswapV3PoolImmutables",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniswapV3PoolImmutables>;
    getContractAt(
      name: "IUniswapV3PoolOwnerActions",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniswapV3PoolOwnerActions>;
    getContractAt(
      name: "IUniswapV3PoolState",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniswapV3PoolState>;
    getContractAt(
      name: "IQuoter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IQuoter>;
    getContractAt(
      name: "ISwapRouter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISwapRouter>;
    getContractAt(
      name: "ERC20Custody",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Custody>;
    getContractAt(
      name: "HanaEth",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.HanaEth>;
    getContractAt(
      name: "HanaNonEth",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.HanaNonEth>;
    getContractAt(
      name: "HanaConnectorBase",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.HanaConnectorBase>;
    getContractAt(
      name: "HanaConnectorEth",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.HanaConnectorEth>;
    getContractAt(
      name: "HanaConnectorNonEth",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.HanaConnectorNonEth>;
    getContractAt(
      name: "ConnectorErrors",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ConnectorErrors>;
    getContractAt(
      name: "HanaErrors",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.HanaErrors>;
    getContractAt(
      name: "HanaInteractorErrors",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.HanaInteractorErrors>;
    getContractAt(
      name: "HanaCommonErrors",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.HanaCommonErrors>;
    getContractAt(
      name: "HanaConnector",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.HanaConnector>;
    getContractAt(
      name: "HanaReceiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.HanaReceiver>;
    getContractAt(
      name: "HanaTokenConsumer",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.HanaTokenConsumer>;
    getContractAt(
      name: "HanaNonEthInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.HanaNonEthInterface>;
    getContractAt(
      name: "HanaInteractorMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.HanaInteractorMock>;
    getContractAt(
      name: "HanaReceiverMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.HanaReceiverMock>;
    getContractAt(
      name: "INonfungiblePositionManager",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.INonfungiblePositionManager>;
    getContractAt(
      name: "IPoolInitializer",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPoolInitializer>;
    getContractAt(
      name: "HanaInteractor",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.HanaInteractor>;
    getContractAt(
      name: "HanaTokenConsumerTrident",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.HanaTokenConsumerTrident>;
    getContractAt(
      name: "HanaTokenConsumerTridentErrors",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.HanaTokenConsumerTridentErrors>;
    getContractAt(
      name: "WETH9",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.WETH9>;
    getContractAt(
      name: "HanaTokenConsumerUniV2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.HanaTokenConsumerUniV2>;
    getContractAt(
      name: "HanaTokenConsumerUniV2Errors",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.HanaTokenConsumerUniV2Errors>;
    getContractAt(
      name: "HanaTokenConsumerUniV3",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.HanaTokenConsumerUniV3>;
    getContractAt(
      name: "HanaTokenConsumerUniV3Errors",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.HanaTokenConsumerUniV3Errors>;
    getContractAt(
      name: "WETH9",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.WETH9>;
    getContractAt(
      name: "ImmutableCreate2Factory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ImmutableCreate2Factory>;
    getContractAt(
      name: "Ownable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "ConcentratedLiquidityPoolFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ConcentratedLiquidityPoolFactory>;
    getContractAt(
      name: "IPoolRouter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPoolRouter>;
    getContractAt(
      name: "HanaConnectorHEVM",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.HanaConnectorHEVM>;
    getContractAt(
      name: "WHANA",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.WHANA>;
    getContractAt(
      name: "HRC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.HRC20>;
    getContractAt(
      name: "HRC20Errors",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.HRC20Errors>;
    getContractAt(
      name: "IHRC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IHRC20>;
    getContractAt(
      name: "IHRC20Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IHRC20Metadata>;
    getContractAt(
      name: "ISystem",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISystem>;
    getContractAt(
      name: "HContract",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.HContract>;
    getContractAt(
      name: "IHRC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IHRC20>;
    getContractAt(
      name: "IUniswapV2Router01",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniswapV2Router01>;
    getContractAt(
      name: "IUniswapV2Router02",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniswapV2Router02>;
    getContractAt(
      name: "SystemContract",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SystemContract>;
    getContractAt(
      name: "SystemContractErrors",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SystemContractErrors>;
    getContractAt(
      name: "WETH9",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.WETH9>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
