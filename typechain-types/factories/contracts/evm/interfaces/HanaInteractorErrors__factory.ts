/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  HanaInteractorErrors,
  HanaInteractorErrorsInterface,
} from "../../../../contracts/evm/interfaces/HanaInteractorErrors";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "InvalidCaller",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidDestinationChainId",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidHanaMessageCall",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidHanaRevertCall",
    type: "error",
  },
] as const;

export class HanaInteractorErrors__factory {
  static readonly abi = _abi;
  static createInterface(): HanaInteractorErrorsInterface {
    return new utils.Interface(_abi) as HanaInteractorErrorsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): HanaInteractorErrors {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as HanaInteractorErrors;
  }
}
