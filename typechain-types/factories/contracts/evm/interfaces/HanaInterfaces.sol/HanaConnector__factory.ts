/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  HanaConnector,
  HanaConnectorInterface,
} from "../../../../../contracts/evm/interfaces/HanaInterfaces.sol/HanaConnector";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "destinationChainId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "destinationAddress",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "destinationGasLimit",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "message",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "hanaValueAndGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "hanaParams",
            type: "bytes",
          },
        ],
        internalType: "struct HanaInterfaces.SendInput",
        name: "input",
        type: "tuple",
      },
    ],
    name: "send",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class HanaConnector__factory {
  static readonly abi = _abi;
  static createInterface(): HanaConnectorInterface {
    return new utils.Interface(_abi) as HanaConnectorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): HanaConnector {
    return new Contract(address, _abi, signerOrProvider) as HanaConnector;
  }
}
