/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  HanaTokenConsumerUniV3,
  HanaTokenConsumerUniV3Interface,
} from "../../../../../contracts/evm/tools/HanaTokenConsumerUniV3.strategy.sol/HanaTokenConsumerUniV3";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "hanaToken_",
        type: "address",
      },
      {
        internalType: "address",
        name: "uniswapV3Router_",
        type: "address",
      },
      {
        internalType: "address",
        name: "uniswapV3Factory_",
        type: "address",
      },
      {
        internalType: "address",
        name: "WETH9Address_",
        type: "address",
      },
      {
        internalType: "uint24",
        name: "hanaPoolFee_",
        type: "uint24",
      },
      {
        internalType: "uint24",
        name: "tokenPoolFee_",
        type: "uint24",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ErrorSendingETH",
    type: "error",
  },
  {
    inputs: [],
    name: "InputCantBeZero",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyError",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    name: "EthExchangedForHana",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    name: "HanaExchangedForEth",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    name: "HanaExchangedForToken",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    name: "TokenExchangedForHana",
    type: "event",
  },
  {
    inputs: [],
    name: "WETH9Address",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "destinationAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "minAmountOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "hanaTokenAmount",
        type: "uint256",
      },
    ],
    name: "getEthFromHana",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "destinationAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "minAmountOut",
        type: "uint256",
      },
    ],
    name: "getHanaFromEth",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "destinationAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "minAmountOut",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "inputToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "inputTokenAmount",
        type: "uint256",
      },
    ],
    name: "getHanaFromToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "destinationAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "minAmountOut",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "outputToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "hanaTokenAmount",
        type: "uint256",
      },
    ],
    name: "getTokenFromHana",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "hanaPoolFee",
    outputs: [
      {
        internalType: "uint24",
        name: "",
        type: "uint24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "hanaToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "hasHanaLiquidity",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenPoolFee",
    outputs: [
      {
        internalType: "uint24",
        name: "",
        type: "uint24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "uniswapV3Factory",
    outputs: [
      {
        internalType: "contract IUniswapV3Factory",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "uniswapV3Router",
    outputs: [
      {
        internalType: "contract ISwapRouter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "";

type HanaTokenConsumerUniV3ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HanaTokenConsumerUniV3ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class HanaTokenConsumerUniV3__factory extends ContractFactory {
  constructor(...args: HanaTokenConsumerUniV3ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    hanaToken_: PromiseOrValue<string>,
    uniswapV3Router_: PromiseOrValue<string>,
    uniswapV3Factory_: PromiseOrValue<string>,
    WETH9Address_: PromiseOrValue<string>,
    hanaPoolFee_: PromiseOrValue<BigNumberish>,
    tokenPoolFee_: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<HanaTokenConsumerUniV3> {
    return super.deploy(
      hanaToken_,
      uniswapV3Router_,
      uniswapV3Factory_,
      WETH9Address_,
      hanaPoolFee_,
      tokenPoolFee_,
      overrides || {}
    ) as Promise<HanaTokenConsumerUniV3>;
  }
  override getDeployTransaction(
    hanaToken_: PromiseOrValue<string>,
    uniswapV3Router_: PromiseOrValue<string>,
    uniswapV3Factory_: PromiseOrValue<string>,
    WETH9Address_: PromiseOrValue<string>,
    hanaPoolFee_: PromiseOrValue<BigNumberish>,
    tokenPoolFee_: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      hanaToken_,
      uniswapV3Router_,
      uniswapV3Factory_,
      WETH9Address_,
      hanaPoolFee_,
      tokenPoolFee_,
      overrides || {}
    );
  }
  override attach(address: string): HanaTokenConsumerUniV3 {
    return super.attach(address) as HanaTokenConsumerUniV3;
  }
  override connect(signer: Signer): HanaTokenConsumerUniV3__factory {
    return super.connect(signer) as HanaTokenConsumerUniV3__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HanaTokenConsumerUniV3Interface {
    return new utils.Interface(_abi) as HanaTokenConsumerUniV3Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): HanaTokenConsumerUniV3 {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as HanaTokenConsumerUniV3;
  }
}
