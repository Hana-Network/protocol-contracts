/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  SystemContract,
  SystemContractInterface,
} from "../../../../contracts/hevm/SystemContract.sol/SystemContract";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "whana_",
        type: "address",
      },
      {
        internalType: "address",
        name: "uniswapv2Factory_",
        type: "address",
      },
      {
        internalType: "address",
        name: "uniswapv2Router02_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "CallerIsNotFungibleModule",
    type: "error",
  },
  {
    inputs: [],
    name: "CantBeIdenticalAddresses",
    type: "error",
  },
  {
    inputs: [],
    name: "CantBeZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidTarget",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "SetConnectorHEVM",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "SetGasCoin",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "SetGasHanaPool",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "SetGasPrice",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "SetWHana",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "SystemContractDeployed",
    type: "event",
  },
  {
    inputs: [],
    name: "FUNGIBLE_MODULE_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "hrc20",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "depositAndCall",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "gasCoinHRC20ByChainId",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "gasHanaPoolByChainId",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "gasPriceByChainId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "hanaConnectorHEVMAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "setConnectorHEVMAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "chainID",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "hrc20",
        type: "address",
      },
    ],
    name: "setGasCoinHRC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "chainID",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "erc20",
        type: "address",
      },
    ],
    name: "setGasHanaPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "chainID",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "setGasPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "setWHANAContractAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "uniswapv2FactoryAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
    ],
    name: "uniswapv2PairFor",
    outputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "uniswapv2Router02Address",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "wHanaContractAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c06040523480156200001157600080fd5b50604051620016da380380620016da8339818101604052810190620000379190620001ac565b73735b14bb79463307aacbed86daf3322b1e6226ab73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614620000b1576040517f2b2add3d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b82600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b815250508073ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1660601b815250507f80699e81136d69cb8367ad52a994e25c722a86da654b561d0c14b61a777e7ac560405160405180910390a15050506200025b565b600081519050620001a68162000241565b92915050565b600080600060608486031215620001c857620001c76200023c565b5b6000620001d88682870162000195565b9350506020620001eb8682870162000195565b9250506040620001fe8682870162000195565b9150509250925092565b600062000215826200021c565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6200024c8162000208565b81146200025857600080fd5b50565b60805160601c60a05160601c61144c6200028e600039600061086e0152600081816107920152610c3e015261144c6000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c8063a7cb050711610097578063d936a01211610066578063d936a0121461025c578063d9e9b4c01461027a578063db2131e5146102aa578063f197e0e1146102c8576100f5565b8063a7cb0507146101c2578063c63585cc146101de578063d42da8701461020e578063d7fd7afb1461022c576100f5565b80633ce4a5bc116100d35780633ce4a5bc1461014e57806379ae782c1461016c578063842da36d146101885780638c6f037f146101a6576100f5565b806306fd10b4146100fa5780631668a3f0146101165780631e39355514610132575b600080fd5b610114600480360381019061010f9190610fff565b6102f8565b005b610130600480360381019061012b9190610e9d565b610400565b005b61014c60048036038101906101479190610e9d565b61057d565b005b6101566106fa565b60405161016391906111ac565b60405180910390f35b61018660048036038101906101819190610fff565b610712565b005b61019061086c565b60405161019d91906111ac565b60405180910390f35b6101c060048036038101906101bb9190610f1d565b610890565b005b6101dc60048036038101906101d7919061103f565b610abf565b005b6101f860048036038101906101f39190610eca565b610b8c565b60405161020591906111ac565b60405180910390f35b610216610bfe565b60405161022391906111ac565b60405180910390f35b61024660048036038101906102419190610fd2565b610c24565b6040516102539190611230565b60405180910390f35b610264610c3c565b60405161027191906111ac565b60405180910390f35b610294600480360381019061028f9190610fd2565b610c60565b6040516102a191906111ac565b60405180910390f35b6102b2610c93565b6040516102bf91906111ac565b60405180910390f35b6102e260048036038101906102dd9190610fd2565b610cb9565b6040516102ef91906111ac565b60405180910390f35b73735b14bb79463307aacbed86daf3322b1e6226ab73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610371576040517f2b2add3d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806001600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fd1b36d30f6248e97c473b4d1348ca164a4ef6759022f54a58ec200326c39c45d82826040516103f492919061124b565b60405180910390a15050565b73735b14bb79463307aacbed86daf3322b1e6226ab73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610479576040517f2b2add3d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156104e0576040517fd92e233d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f495b3e78b13285a35b3924be7ea2c0f6363b2e777d484e0e67274f778b63914b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660405161057291906111ac565b60405180910390a150565b73735b14bb79463307aacbed86daf3322b1e6226ab73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105f6576040517f2b2add3d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561065d576040517fd92e233d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fbf29203eef941ded6783003162d888cafd3914fdcf81df202d84a247108af57d600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040516106ef91906111ac565b60405180910390a150565b73735b14bb79463307aacbed86daf3322b1e6226ab81565b73735b14bb79463307aacbed86daf3322b1e6226ab73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461078b576040517f2b2add3d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006107da7f0000000000000000000000000000000000000000000000000000000000000000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684610b8c565b9050806002600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507ffde6856eeb152d7c29aff8485d17f698215cf3de7532688f9c59ecedfd2a77c7838260405161085f92919061124b565b60405180910390a1505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b73735b14bb79463307aacbed86daf3322b1e6226ab73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610909576040517f2b2add3d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73735b14bb79463307aacbed86daf3322b1e6226ab73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16148061098257503073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16145b156109b9576040517f82d5d76a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8473ffffffffffffffffffffffffffffffffffffffff166347e7ef2484866040518363ffffffff1660e01b81526004016109f49291906111c7565b602060405180830381600087803b158015610a0e57600080fd5b505af1158015610a22573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a469190610fa5565b508273ffffffffffffffffffffffffffffffffffffffff1663c8522691868685856040518563ffffffff1660e01b8152600401610a8694939291906111f0565b600060405180830381600087803b158015610aa057600080fd5b505af1158015610ab4573d6000803e3d6000fd5b505050505050505050565b73735b14bb79463307aacbed86daf3322b1e6226ab73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610b38576040517f2b2add3d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600080848152602001908152602001600020819055507f49f492222906ac486c3c1401fa545626df1f0c0e5a77a05597ea2ed66af9850d8282604051610b80929190611274565b60405180910390a15050565b6000806000610b9b8585610cec565b91509150858282604051602001610bb392919061113e565b60405160208183030381529060405280519060200120604051602001610bda92919061116a565b6040516020818303038152906040528051906020012060001c925050509392505050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000081565b60026020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60016020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415610d55576040517fcb1e7cfe00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1610610d8f578284610d92565b83835b8092508193505050600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610e01576040517f78b507da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b9250929050565b600081359050610e17816113d1565b92915050565b600081519050610e2c816113e8565b92915050565b60008083601f840112610e4857610e4761134d565b5b8235905067ffffffffffffffff811115610e6557610e64611348565b5b602083019150836001820283011115610e8157610e80611352565b5b9250929050565b600081359050610e97816113ff565b92915050565b600060208284031215610eb357610eb261135c565b5b6000610ec184828501610e08565b91505092915050565b600080600060608486031215610ee357610ee261135c565b5b6000610ef186828701610e08565b9350506020610f0286828701610e08565b9250506040610f1386828701610e08565b9150509250925092565b600080600080600060808688031215610f3957610f3861135c565b5b6000610f4788828901610e08565b9550506020610f5888828901610e88565b9450506040610f6988828901610e08565b935050606086013567ffffffffffffffff811115610f8a57610f89611357565b5b610f9688828901610e32565b92509250509295509295909350565b600060208284031215610fbb57610fba61135c565b5b6000610fc984828501610e1d565b91505092915050565b600060208284031215610fe857610fe761135c565b5b6000610ff684828501610e88565b91505092915050565b600080604083850312156110165761101561135c565b5b600061102485828601610e88565b925050602061103585828601610e08565b9150509250929050565b600080604083850312156110565761105561135c565b5b600061106485828601610e88565b925050602061107585828601610e88565b9150509250929050565b611088816112b9565b82525050565b61109f61109a826112b9565b61131a565b82525050565b6110b66110b1826112d7565b61132c565b82525050565b60006110c8838561129d565b93506110d583858461130b565b6110de83611361565b840190509392505050565b60006110f66020836112ae565b91506111018261137f565b602082019050919050565b60006111196001836112ae565b9150611124826113a8565b600182019050919050565b61113881611301565b82525050565b600061114a828561108e565b60148201915061115a828461108e565b6014820191508190509392505050565b60006111758261110c565b9150611181828561108e565b60148201915061119182846110a5565b6020820191506111a0826110e9565b91508190509392505050565b60006020820190506111c1600083018461107f565b92915050565b60006040820190506111dc600083018561107f565b6111e9602083018461112f565b9392505050565b6000606082019050611205600083018761107f565b611212602083018661112f565b81810360408301526112258184866110bc565b905095945050505050565b6000602082019050611245600083018461112f565b92915050565b6000604082019050611260600083018561112f565b61126d602083018461107f565b9392505050565b6000604082019050611289600083018561112f565b611296602083018461112f565b9392505050565b600082825260208201905092915050565b600081905092915050565b60006112c4826112e1565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b600061132582611336565b9050919050565b6000819050919050565b600061134182611372565b9050919050565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b60008160601b9050919050565b7f96e8ac4277198ff8b6f785478aa9a39f403cb768dd02cbee326c3e7da348845f600082015250565b7fff00000000000000000000000000000000000000000000000000000000000000600082015250565b6113da816112b9565b81146113e557600080fd5b50565b6113f1816112cb565b81146113fc57600080fd5b50565b61140881611301565b811461141357600080fd5b5056fea264697066735822122086371dff8df4aabf54eee2c4dac1f579637b441ddd01d546985d2f5c05355d6e64736f6c63430008070033";

type SystemContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SystemContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SystemContract__factory extends ContractFactory {
  constructor(...args: SystemContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    whana_: PromiseOrValue<string>,
    uniswapv2Factory_: PromiseOrValue<string>,
    uniswapv2Router02_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SystemContract> {
    return super.deploy(
      whana_,
      uniswapv2Factory_,
      uniswapv2Router02_,
      overrides || {}
    ) as Promise<SystemContract>;
  }
  override getDeployTransaction(
    whana_: PromiseOrValue<string>,
    uniswapv2Factory_: PromiseOrValue<string>,
    uniswapv2Router02_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      whana_,
      uniswapv2Factory_,
      uniswapv2Router02_,
      overrides || {}
    );
  }
  override attach(address: string): SystemContract {
    return super.attach(address) as SystemContract;
  }
  override connect(signer: Signer): SystemContract__factory {
    return super.connect(signer) as SystemContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SystemContractInterface {
    return new utils.Interface(_abi) as SystemContractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SystemContract {
    return new Contract(address, _abi, signerOrProvider) as SystemContract;
  }
}
