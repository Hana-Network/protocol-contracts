/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  HanaConnectorHEVM,
  HanaConnectorHEVMInterface,
} from "../../../../contracts/hevm/ConnectorHEVM.sol/HanaConnectorHEVM";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_whana",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "FailedHanaSent",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyFungibleModule",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyWHANA",
    type: "error",
  },
  {
    inputs: [],
    name: "WHANATransferFailed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sourceTxOriginAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "hanaTxSenderAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "destinationChainId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "destinationAddress",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "hanaValueAndGas",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "destinationGasLimit",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "hanaParams",
        type: "bytes",
      },
    ],
    name: "HanaSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "whana_",
        type: "address",
      },
    ],
    name: "SetWHANA",
    type: "event",
  },
  {
    inputs: [],
    name: "FUNGIBLE_MODULE_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "destinationChainId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "destinationAddress",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "destinationGasLimit",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "message",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "hanaValueAndGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "hanaParams",
            type: "bytes",
          },
        ],
        internalType: "struct HanaInterfaces.SendInput",
        name: "input",
        type: "tuple",
      },
    ],
    name: "send",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "whana_",
        type: "address",
      },
    ],
    name: "setWhanaAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "whana",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610a52380380610a528339818101604052810190610032919061008d565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610108565b600081519050610087816100f1565b92915050565b6000602082840312156100a3576100a26100ec565b5b60006100b184828501610078565b91505092915050565b60006100c5826100cc565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6100fa816100ba565b811461010557600080fd5b50565b61093b806101176000396000f3fe6080604052600436106100435760003560e01c80633ce4a5bc146100d4578063a4590ea1146100ff578063ca9457a514610128578063ec02690114610153576100cf565b366100cf5760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146100cd576040517fa5a74d8c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b005b600080fd5b3480156100e057600080fd5b506100e961017c565b6040516100f691906106e6565b60405180910390f35b34801561010b57600080fd5b50610126600480360381019061012191906105c0565b610194565b005b34801561013457600080fd5b5061013d610287565b60405161014a91906106e6565b60405180910390f35b34801561015f57600080fd5b5061017a6004803603810190610175919061061a565b6102ab565b005b73735b14bb79463307aacbed86daf3322b1e6226ab81565b73735b14bb79463307aacbed86daf3322b1e6226ab73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461020d576040517fea02b3f300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507ffd250d2fc6a8268f30b40917cdfa5b10a3e164e384e03bf4a90192e81ffa27d08160405161027c91906106e6565b60405180910390a150565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd333084608001356040518463ffffffff1660e01b815260040161030c93929190610701565b602060405180830381600087803b15801561032657600080fd5b505af115801561033a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061035e91906105ed565b610394576040517ff8e9c1a600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632e1a7d4d82608001356040518263ffffffff1660e01b81526004016103f191906107b4565b600060405180830381600087803b15801561040b57600080fd5b505af115801561041f573d6000803e3d6000fd5b50505050600073735b14bb79463307aacbed86daf3322b1e6226ab73ffffffffffffffffffffffffffffffffffffffff168260800135604051610461906106d1565b60006040518083038185875af1925050503d806000811461049e576040519150601f19603f3d011682016040523d82523d6000602084013e6104a3565b606091505b50509050806104de576040517f9a543f2100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b81600001353373ffffffffffffffffffffffffffffffffffffffff167f7a0dd478962bca8db7a72b684fbfd3404be69978e5f8f1c8eab2cfe4724ebaee3285806020019061052c91906107cf565b8760800135886040013589806060019061054691906107cf565b8b8060a0019061055691906107cf565b60405161056b99989796959493929190610738565b60405180910390a35050565b600081359050610586816108d7565b92915050565b60008151905061059b816108ee565b92915050565b600060c082840312156105b7576105b66108aa565b5b81905092915050565b6000602082840312156105d6576105d56108be565b5b60006105e484828501610577565b91505092915050565b600060208284031215610603576106026108be565b5b60006106118482850161058c565b91505092915050565b6000602082840312156106305761062f6108be565b5b600082013567ffffffffffffffff81111561064e5761064d6108b9565b5b61065a848285016105a1565b91505092915050565b61066c8161084e565b82525050565b600061067e8385610832565b935061068b838584610896565b610694836108c3565b840190509392505050565b60006106ac600083610843565b91506106b7826108d4565b600082019050919050565b6106cb8161088c565b82525050565b60006106dc8261069f565b9150819050919050565b60006020820190506106fb6000830184610663565b92915050565b60006060820190506107166000830186610663565b6107236020830185610663565b61073060408301846106c2565b949350505050565b600060c08201905061074d600083018c610663565b8181036020830152610760818a8c610672565b905061076f60408301896106c2565b61077c60608301886106c2565b818103608083015261078f818688610672565b905081810360a08301526107a4818486610672565b90509a9950505050505050505050565b60006020820190506107c960008301846106c2565b92915050565b600080833560016020038436030381126107ec576107eb6108af565b5b80840192508235915067ffffffffffffffff82111561080e5761080d6108a5565b5b60208301925060018202360383131561082a576108296108b4565b5b509250929050565b600082825260208201905092915050565b600081905092915050565b60006108598261086c565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b50565b6108e08161084e565b81146108eb57600080fd5b50565b6108f781610860565b811461090257600080fd5b5056fea2646970667358221220b0dda7375a0943a921214b5105c1e1054d898d600d9848abc9eb488ec80a0fd264736f6c63430008070033";

type HanaConnectorHEVMConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HanaConnectorHEVMConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class HanaConnectorHEVM__factory extends ContractFactory {
  constructor(...args: HanaConnectorHEVMConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _whana: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<HanaConnectorHEVM> {
    return super.deploy(_whana, overrides || {}) as Promise<HanaConnectorHEVM>;
  }
  override getDeployTransaction(
    _whana: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_whana, overrides || {});
  }
  override attach(address: string): HanaConnectorHEVM {
    return super.attach(address) as HanaConnectorHEVM;
  }
  override connect(signer: Signer): HanaConnectorHEVM__factory {
    return super.connect(signer) as HanaConnectorHEVM__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HanaConnectorHEVMInterface {
    return new utils.Interface(_abi) as HanaConnectorHEVMInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): HanaConnectorHEVM {
    return new Contract(address, _abi, signerOrProvider) as HanaConnectorHEVM;
  }
}
